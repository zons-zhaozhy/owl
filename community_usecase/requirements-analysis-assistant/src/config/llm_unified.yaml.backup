# 统一LLM配置文件
# 支持多种LLM提供商，包括本地ollama和远程API

llm:
  # 默认LLM提供商 (可以通过环境变量 OWL_LLM_PROVIDER 覆盖)
  default_provider: "deepseek"
  
  # 启用的提供商列表
  enabled_providers:
    - "deepseek"
    - "openai" 
    - "ollama"
    - "anthropic"
  
  # 提供商配置
  providers:
    # DeepSeek配置
    deepseek:
      enabled: true
      api_base: "https://api.deepseek.com/v1"
      model: "deepseek-chat"
      api_key: "${DEEPSEEK_API_KEY}"
      temperature: 0.1
      max_tokens: 20000
      top_p: 0.95
      timeout: 60
      retry_attempts: 3
      retry_delay: 1.0
    
    # OpenAI配置
    openai:
      enabled: true
      api_base: "https://api.openai.com/v1"
      model: "gpt-4-turbo-preview"
      api_key: "${OPENAI_API_KEY}"
      temperature: 0.1
      max_tokens: 200000
      top_p: 0.95
      timeout: 60
      retry_attempts: 3
      retry_delay: 1.0
    
    # Ollama本地配置
    ollama:
      enabled: true
      api_base: "http://localhost:11434"
      model: "llama3.1:8b"
      temperature: 0.1
      max_tokens: 10000
      timeout: 120
      retry_attempts: 2
      retry_delay: 2.0
      available_models:
        - "llama3.1:8b"
        - "llama3.1:70b"
        - "qwen2.5:7b"
        - "qwen2.5:14b"
        - "deepseek-coder-v2:16b"
        - "codellama:7b"
    
    # Anthropic配置
    anthropic:
      enabled: false  # 默认禁用
      model: "claude-3-sonnet-20240229"
      api_key: "${ANTHROPIC_API_KEY}"
      temperature: 0.1
      max_tokens: 100000
      timeout: 60
      retry_attempts: 3
      retry_delay: 1.0

# 提示词配置 - 统一使用JSON格式
prompts:
  format: "json"  # 强制使用JSON格式
  encoding: "utf-8"
  
  # 通用系统提示词
  system_prompts:
    default: |
      {
        "role": "requirements_analysis_assistant",
        "goal": "协助用户进行专业的需求分析",
        "capabilities": [
          "需求提取和结构化",
          "需求分析和评估", 
          "风险识别和建议",
          "文档生成和质量检查"
        ],
        "output_format": "structured_json",
        "language": "chinese"
      }
  
  # 模板配置 - 使用独立的JSON文件
  # templates:
    # 需求提取模板
    requirements_extraction:
      system: |
        {
          "role": "requirements_extractor",
          "task": "从用户输入中提取结构化的需求信息",
          "output_schema": {
            "functional_requirements": [
              {
                "id": "string",
                "description": "string", 
                "priority": "high|medium|low",
                "category": "string"
              }
            ],
            "non_functional_requirements": [
              {
                "id": "string",
                "type": "performance|security|usability|reliability",
                "description": "string",
                "metrics": "string"
              }
            ],
            "constraints": [
              {
                "type": "technical|business|time|budget",
                "description": "string"
              }
            ],
            "assumptions": ["string"],
            "dependencies": [
              {
                "from": "string",
                "to": "string", 
                "type": "string"
              }
            ]
          },
          "extraction_guidelines": [
            "识别明确和隐含的需求",
            "区分功能性和非功能性需求",
            "识别约束条件和假设",
            "发现需求间的依赖关系"
          ]
        }
      user: |
        {
          "instruction": "请分析以下需求描述，提取关键需求信息",
          "input_text": "{input}",
          "context": {
            "domain": "{domain}",
            "stakeholders": "{stakeholders}"
          }
        }
    
    # 需求分析模板
    requirements_analysis:
      system: |
        {
          "role": "requirements_analyzer", 
          "task": "深入分析需求的可行性、复杂度和影响",
          "output_schema": {
            "feasibility_analysis": {
              "technical_feasibility": "high|medium|low",
              "resource_feasibility": "high|medium|low", 
              "time_feasibility": "high|medium|low",
              "analysis_details": "string"
            },
            "complexity_assessment": {
              "overall_complexity": "high|medium|low",
              "technical_complexity": "high|medium|low",
              "integration_complexity": "high|medium|low",
              "complexity_factors": ["string"]
            },
            "risk_analysis": [
              {
                "risk_id": "string",
                "description": "string",
                "probability": "high|medium|low",
                "impact": "high|medium|low",
                "mitigation": "string"
              }
            ],
            "effort_estimation": {
              "development_effort": "string",
              "testing_effort": "string", 
              "deployment_effort": "string",
              "total_effort": "string"
            },
            "recommendations": [
              {
                "type": "architecture|technology|process",
                "description": "string",
                "rationale": "string"
              }
            ]
          }
        }
      user: |
        {
          "instruction": "请分析以下需求的可行性和复杂度",
          "requirements": {requirements},
          "constraints": {constraints},
          "context": {
            "project_scope": "{project_scope}",
            "timeline": "{timeline}",
            "resources": "{resources}"
          }
        }
    
    # 质量检查模板
    quality_check:
      system: |
        {
          "role": "quality_checker",
          "task": "检查需求和分析结果的质量",
          "quality_criteria": [
            "completeness", "consistency", "clarity", 
            "testability", "feasibility", "traceability"
          ],
          "output_schema": {
            "quality_score": "number (0-100)",
            "quality_issues": [
              {
                "issue_id": "string",
                "severity": "critical|major|minor",
                "category": "completeness|consistency|clarity|testability",
                "description": "string",
                "location": "string",
                "suggestion": "string"
              }
            ],
            "quality_metrics": {
              "completeness_score": "number",
              "consistency_score": "number", 
              "clarity_score": "number",
              "testability_score": "number"
            },
            "improvement_recommendations": [
              {
                "priority": "high|medium|low",
                "action": "string",
                "expected_impact": "string"
              }
            ]
          }
        }
      user: |
        {
          "instruction": "请检查以下需求和分析的质量",
          "requirements": {requirements},
          "analysis": {analysis},
          "quality_standards": {quality_standards}
        }
    
    # 文档生成模板
    documentation_generation:
      system: |
        {
          "role": "documentation_generator",
          "task": "生成完整的需求文档",
          "document_structure": [
            "executive_summary", "project_overview", "requirements_specification",
            "technical_architecture", "implementation_plan", "risk_management",
            "quality_assurance", "appendices"
          ],
          "output_schema": {
            "document": {
              "metadata": {
                "title": "string",
                "version": "string", 
                "date": "string",
                "authors": ["string"],
                "reviewers": ["string"]
              },
              "executive_summary": "string",
              "project_overview": {
                "background": "string",
                "objectives": ["string"],
                "scope": "string",
                "stakeholders": ["string"]
              },
              "requirements_specification": {
                "functional_requirements": "array",
                "non_functional_requirements": "array", 
                "constraints": "array"
              },
              "technical_architecture": {
                "system_overview": "string",
                "components": "array",
                "interfaces": "array",
                "technology_stack": "array"
              },
              "implementation_plan": {
                "phases": "array",
                "timeline": "string",
                "resources": "array",
                "milestones": "array"
              },
              "risk_management": {
                "risks": "array",
                "mitigation_strategies": "array"
              }
            }
          }
        }
      user: |
        {
          "instruction": "请生成完整的需求文档",
          "requirements": {requirements},
          "analysis": {analysis},
          "quality_report": {quality_report},
          "document_template": "{template}",
          "output_format": "markdown"
        }

# 缓存配置
cache:
  enabled: true
  ttl: 3600  # 1小时
  max_size: 1000
  storage: "memory"  # memory, redis, file

# 监控配置
monitoring:
  enabled: true
  log_requests: true
  log_responses: false  # 响应可能很长
  track_performance: true
  metrics:
    - "request_count"
    - "response_time"
    - "error_rate"
    - "token_usage"

# 错误处理配置
error_handling:
  fallback_provider: "ollama"
  max_retries: 3
  timeout_seconds: 120
  
# 性能配置
performance:
  concurrent_requests: 5
  rate_limit_per_minute: 60
  cache_enabled: true
  cache_ttl_seconds: 3600

# 智能体配置
agents:
  # 通用配置
  common:
    llm_provider: "deepseek"
    max_context_length: 20000
    response_timeout: 60
    
  # 需求提取智能体
  requirements_extractor:
    capabilities: [
      "自然语言理解",
      "需求识别和分类",
      "结构化数据提取",
      "上下文理解"
    ]
    
  # 需求分析智能体  
  requirements_analyzer:
    capabilities: [
      "可行性分析",
      "复杂度评估",
      "风险识别",
      "技术建议"
    ]
    
  # 质量检查智能体
  quality_checker:
    capabilities: [
      "完整性检查",
      "一致性验证", 
      "清晰度评估",
      "可测试性分析"
    ]
    
  # 文档生成智能体
  documentation_generator:
    capabilities: [
      "需求提取和结构化",
      "需求分析和评估", 
      "风险识别和建议",
      "文档生成和质量检查"
    ]
    output_format: "structured_json"
    language: "chinese"

# 模板配置 - 使用独立的JSON文件
# 模板文件位置: src/templates/*.json 