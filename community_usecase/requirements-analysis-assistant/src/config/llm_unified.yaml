# 统一LLM配置文件
# 支持多种LLM提供商，包括本地ollama和远程API

llm:
  # 默认LLM提供商 (可以通过环境变量 OWL_LLM_PROVIDER 覆盖)
  default_provider: "deepseek"
  
  # 启用的提供商列表
  enabled_providers:
    - "deepseek"
    - "openai" 
    - "ollama"
    - "anthropic"
  
  # 提供商配置
  providers:
    # DeepSeek配置
    deepseek:
      enabled: true
      api_base: "https://api.deepseek.com/v1"
      model: "deepseek-chat"
      api_key: "${DEEPSEEK_API_KEY}"
      temperature: 0.1
      max_tokens: 8000
      top_p: 0.95
      timeout: 120
      retry_attempts: 3
      retry_delay: 2.0
    
    # OpenAI配置
    openai:
      enabled: true
      api_base: "https://api.openai.com/v1"
      model: "gpt-4-turbo-preview"
      api_key: "${OPENAI_API_KEY}"
      temperature: 0.1
      max_tokens: 200000
      top_p: 0.95
      timeout: 60
      retry_attempts: 3
      retry_delay: 1.0
    
    # Ollama本地配置
    ollama:
      enabled: true
      api_base: "http://localhost:11434"
      model: "llama3.1:8b"
      temperature: 0.1
      max_tokens: 10000
      timeout: 120
      retry_attempts: 2
      retry_delay: 2.0
      available_models:
        - "gemma3n:e4b"
        - "llama3.1:8b"
        - "llama3.1:70b"
        - "qwen2.5:7b"
        - "qwen2.5:14b"
        - "deepseek-coder-v2:16b"
        - "codellama:7b"
    
    # Anthropic配置
    anthropic:
      enabled: false  # 默认禁用
      model: "claude-3-sonnet-20240229"
      api_key: "${ANTHROPIC_API_KEY}"
      temperature: 0.1
      max_tokens: 100000
      timeout: 60
      retry_attempts: 3
      retry_delay: 1.0

  # 错误处理配置
  error_handling:
    fallback_provider: "ollama"
    max_retries: 3
    timeout_seconds: 120
    
  # 性能配置
  performance:
    concurrent_requests: 5
    rate_limit_per_minute: 60
    cache_enabled: true
    cache_ttl_seconds: 3600

# 智能体配置
agents:
  # 通用配置
  common:
    llm_provider: "deepseek"
    max_context_length: 8000
    response_timeout: 60
    
  # 需求提取智能体
  requirements_extractor:
    capabilities: [
      "自然语言理解",
      "需求识别和分类",
      "结构化数据提取",
      "上下文理解"
    ]
    
  # 需求分析智能体  
  requirements_analyzer:
    capabilities: [
      "可行性分析",
      "复杂度评估",
      "风险识别",
      "技术建议"
    ]
    
  # 质量检查智能体
  quality_checker:
    capabilities: [
      "完整性检查",
      "一致性验证", 
      "清晰度评估",
      "可测试性分析"
    ]
    
  # 文档生成智能体
  documentation_generator:
    capabilities: [
      "需求提取和结构化",
      "需求分析和评估", 
      "风险识别和建议",
      "文档生成和质量检查"
    ]
    output_format: "structured_json"
    language: "chinese"

# 模板配置 - 使用独立的JSON文件
# 模板文件位置: src/templates/*.json 